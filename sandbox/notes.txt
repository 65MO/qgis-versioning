approche pour epanet/swmm:

Si on se base sur qgis (processing) comme interface de base:
+ on dépend pas du format sig d'entré
+ l'interface graphique est facile à créer
+ on peut chaîner les traitements
- les types sont limités (string, int, double) ce qui est pénible pour les timestamp, les types énumérés etc.
- ergo interface graphique
- beaucoup de layer qui sont des tables
- gestion du temps avec plugin Time Manager marche pas (pas bien)

Si on se base sur postgres:
+ on peut avoir de tables / vue qui collent au plus près au modèle se simu
+ qgis est juste là pour visu / lancement de calcul
+ on peut avoir une vue historisée avec interpolation du temps
+ les jointures sont plus faciles (clef résultat -> vue spatiale avec géométrie)
+ perf
+ les relation (graph) dans le modèle sont explicites
+ on peut facilement archiver les simulations sur un même modèle
- on a un format de modèle fixe
+ on peut générer l'interface graphique à partir de types de données (eg enumérés)

Du coup on aurrait un schema de simul pour un modèle, on donne le schema en entrée à un wrapper python qui génère le .inp, roule la simu et parse la sortie pour le mettre en base et créer des vues de résultat.
Qgis devient alors un viewer/modeleur graphique et postpro.


